<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd 
        http://cxf.apache.org/jaxws
 		http://cxf.apache.org/schemas/jaxws.xsd
        ">


	<bean id="propertyConfigurer"   class="com.wos.common.EncryptPropertyPlaceholderConfigurer">
	         <property name="locations">
	             <list>
	                 <value>classpath:jdbc.properties</value>
	             </list>
	         </property>
	 </bean>

	<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${driverClassName}"/>
		<property name="url" value="${url}"/>
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<!-- 连接池启动时的初始值 -->  
	  	<property name="initialSize" value="${initialSize}" />  
	  	<!-- 连接池的最大值 -->  
	  	<property name="maxActive" value="${maxActive}" />  
	  	<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->  
	  	<property name="maxIdle" value="${maxIdle}" />  
	  	<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->  
	  	<property name="minIdle" value="${minIdle}" />  
	</bean>

	<!-- <bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver">
		</property>
		<property name="url"
			value="jdbc:sqlserver://localhost:1433;databaseName=temp_other">
		</property>
		<property name="username" value="sa"></property>
		<property name="password" value="sa"></property>
	</bean> -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="myDataSource" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myDataSource" />
	</bean>
	
	<!-- scan classes of mapper： -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wos.dao.mapper" />
	</bean>

</beans>